meta {
  name: Create devtest_gar_authparties-person-to-org
  type: http
  seq: 2
}

post {
  url: {{baseUrl}}/resourceregistry/api/v1/resource
  body: json
  auth: inherit
}

body:json {
  {
    "identifier": "devtest_gar_{{name}}",
    "title": {
      "en": "{{title}} Generic Access Resource for Development Tests",
      "nb": "{{title}} Generisk Tilgangsressurs for Utviklingstester",
      "nn": "{{title}} Generisk Tilgongsressurs for Utviklingstestar"
    },
    "description": {
      "en": "{{title}} is a very nice generic access resource for development tests",
      "nb": "{{title}} er en veldig fin generisk tilgangsressurs for utviklingstester",
      "nn": "{{title}} er ein steikje fine generisk tilgongsressurs for utviklingstestar"
    },
    "rightDescription": {
      "en": "You'll give access to {{title}}, a generic access resource for development tests",
      "nb": "Du gir tilgang til {{title}}, en generisk tilgangsressurs for utviklingstester",
      "nn": "Du gir tilgong til {{title}}, ein generisk tilgongsressurs for utviklingstestar"
    },
    "homepage": "",
    "status": "Active",
    "contactPoints": [],
    "isPartOf": "",
    "resourceReferences": [],
    "delegable": true,
    "visible": true,
    "hasCompetentAuthority": {
      "organization": "991825827",
      "orgcode": "ttd",
      "name": {
        "en": "Test departement",
        "nb": "Testdepartement",
        "nn": "Testdepartement"
      }
    },
    "keywords": [],
    "accessListMode": "Disabled",
    "selfIdentifiedUserEnabled": false,
    "enterpriseUserEnabled": true,
    "resourceType": "GenericAccessResource"
  }
}

vars:pre-request {
  name: authparties-person-to-org
  title: AuthorizedParties: Person to Organization
}

script:pre-request {
  //const token = await tokenGenerator.getToken();
  const sharedtestdata = require(`./Testdata/sharedtestdata.json`);
  
  var getTokenParameters = {
    auth_orgNo: sharedtestdata.serviceOwners.ttd.orgno,
    auth_org: sharedtestdata.serviceOwners.ttd.org,
    auth_tokenType: sharedtestdata.authTokenType.enterprise,
    auth_scopes: sharedtestdata.auth_scopes.resourceregistryWrite
  }
  
  const token = await testTokenGenerator.getToken(getTokenParameters);
  
  bru.setVar("bearerToken",  token);
  
  
  
}
