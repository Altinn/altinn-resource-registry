meta {
  name: Create resource devtest_mps_{{name}}
  type: http
  seq: 1
}

post {
  url: {{baseUrl}}/resourceregistry/api/v1/resource
  body: json
  auth: inherit
}

body:json {
  {
      "identifier": "devtest_mps_{{name}}",
      "title": {
        "en": "{{title}} Maskinporten Schema for development testing",
        "nb": "{{title}} Maskinporten Schema for utviklingstester",
        "nn": "{{title}} Maskinporten Schema for utviklingstestar"
      },
      "description": {
        "en": "{{title}} Maskinporten Schema test resource for development testing",
        "nb": "{{title}} Maskinporten Schema test resource for utviklingstester",
        "nn": "{{title}} Maskinporten Schema test resource for utviklingstestar"
      },
      "rightDescription": {
        "en": "Access to the referenced maskinporten scopes",
        "nb": "Tilgang til de refererte maskinporten scopene",
        "nn": "Tilgong til dei refererte maskinporten scopa"
      },
    "homepage": "",
    "status": "Active",
    "contactPoints": [],
    "isPartOf": "",
    "resourceReferences": [
        {
          "referenceSource": "ExternalPlatform",
          "reference": "ttd:mps/{{name}}.read",
          "referenceType": "MaskinportenScope"
        },
        {
          "referenceSource": "ExternalPlatform",
          "reference": "ttd:mps/{{name}}.write",
          "referenceType": "MaskinportenScope"
        }
      ],
    "delegable": true,
    "visible": true,
    "hasCompetentAuthority": {
      "organization": "991825827",
      "orgcode": "ttd",
      "name": {
        "en": "Test departement",
        "nb": "Testdepartement",
        "nn": "Testdepartement"
      }
    },
    "keywords": [],
    "accessListMode": "Disabled",
    "selfIdentifiedUserEnabled": false,
    "enterpriseUserEnabled": true,
    "resourceType": "MaskinportenSchema"    
  }
}

vars:pre-request {
  name: 
  title: 
}

script:pre-request {
  //const token = await tokenGenerator.getToken();
  const sharedtestdata = require(`./Testdata/sharedtestdata.json`);
  
  var getTokenParameters = {
    auth_orgNo: sharedtestdata.serviceOwners.ttd.orgno,
    auth_org: sharedtestdata.serviceOwners.ttd.org,
    auth_tokenType: sharedtestdata.authTokenType.enterprise,
    auth_scopes: sharedtestdata.auth_scopes.resourceregistryAdmin
  }
  
  const token = await testTokenGenerator.getToken(getTokenParameters);
  
  bru.setVar("bearerToken",  token);
  
  
  
}
